# Environment Variables Examples

# Copy this file to .env in the respective directories and fill in your values

# =============================================================================
# ROOT DIRECTORY (.env)
# =============================================================================

# Database connection (shared across all services)
DATABASE_URL="postgresql://postgres:password@localhost:5432/uptimecheck"

# =============================================================================
# packages/db/.env
# =============================================================================

# Database connection for Prisma
DATABASE_URL="postgresql://postgres:password@localhost:5432/uptimecheck"

# =============================================================================
# apps/api/.env
# =============================================================================

# Database connection
DATABASE_URL="postgresql://postgres:password@localhost:5432/uptimecheck"

# JWT Secret for API authentication
JWT_SECRET="your-super-secret-jwt-key-here"

# Clerk authentication (if using)
CLERK_SECRET_KEY="sk_test_your-clerk-secret-key"

# API Server Configuration
PORT=4000
NODE_ENV=development

# =============================================================================
# apps/frontend/.env.local
# =============================================================================

# Clerk authentication
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY="pk_test_your-clerk-publishable-key"
CLERK_SECRET_KEY="sk_test_your-clerk-secret-key"

# API endpoint
NEXT_PUBLIC_API_URL="http://localhost:4000"

# Next.js configuration
NEXTAUTH_URL="http://localhost:3000"
NEXTAUTH_SECRET="your-nextauth-secret"

# =============================================================================
# apps/hub/.env
# =============================================================================

# Database connection
DATABASE_URL="postgresql://postgres:password@localhost:5432/uptimecheck"

# Hub WebSocket server configuration
HUB_PORT=4001
NODE_ENV=development

# =============================================================================
# apps/validator/.env
# =============================================================================

# Solana private key for validator authentication
# Generate this using: bun generate-key.ts
PRIVATE_KEY=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64]

# Hub connection
HUB_URL="ws://localhost:4001"

# Validator configuration
VALIDATOR_LOCATION="us-east-1"
NODE_ENV=development

# =============================================================================
# DOCKER COMPOSE (if using docker-compose.yml)
# =============================================================================

# PostgreSQL Database
POSTGRES_USER=postgres
POSTGRES_PASSWORD=password
POSTGRES_DB=uptimecheck
POSTGRES_PORT=5432

# =============================================================================
# PRODUCTION ENVIRONMENT VARIABLES
# =============================================================================

# For production, replace with actual values:
# - Use strong, unique passwords
# - Use proper SSL certificates
# - Use production Clerk keys
# - Use production database URLs
# - Set NODE_ENV=production

# Example production DATABASE_URL:
# DATABASE_URL="postgresql://username:password@host:5432/database?sslmode=require"

# Example production Clerk keys:
# NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY="pk_live_your-live-key"
# CLERK_SECRET_KEY="sk_live_your-live-secret"
